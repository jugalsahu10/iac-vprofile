name: "Vprofile IAC"
on:
  push:
    branches:
      - main
      - stage
    paths:
      - terraform/**
  pull_request:
    branches:
      - main
    paths:
      - terraform/**
      
env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  BUCKET_TERRAFORM_STATE: ${{ secrets.BUCKET_TERRAFORM_STATE }}
  AWS_REGION: us-east-1
  EKS_CLUSTER: vprofile-eks
  
jobs:
  terraform:
    name: Apply terraform code changes
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./terraform
    
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        
      - name: Setup terraform with specified version on the runner
        uses: hashicorp/setup-terraform@v2
        
      - name: Terraform init
        id: init
        run: terraform init -backend-config="bucket=$BUCKET_TERRAFORM_STATE"
        
      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        
      - name: Terraform validate
        id: validate
        run: terraform validate
        
      - name: Terraform plan
        id: plan
        run: terraform plan -no-color -input=false -out planfile
      
      - name: Terraform plan status
        if: steps.plan.outcome == 'failure'
        run: exit 1
        
      - name: Terraform apply
        id: apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terrafor apply -auto-approve -input=false -parallelism=1 planfile
        
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
          
      - name: Get kube config file
        id: get-kube-config
        if: steps.apply.outcome == 'success'
        run: aws eks update-kubeconfig --region ${{ env.AWS_REGION }} --name ${{ env.EKS_CLUSTER }}
        
      - name: Install ingress controller
        if: steps.apply.outcome == 'success' && steps.get-kube-config.outcome == 'success'
        run: kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v0.44.0/deploy/static/provider/cloud/deploy.yaml